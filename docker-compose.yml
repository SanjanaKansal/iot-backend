version: "3"

services:
#  dataskipper:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    env_file: .env
#    depends_on:
#      - dataskipper_db
#    container_name: dataskipper
#    ports:
#      - "${APP_PORT}:8000"
#    command: /bin/bash -c '/wait-for-it.sh dataskipper_db:${DB_PORT} -- python manage.py migrate && gunicorn -c gunicorn_config.py dataskipper.wsgi'

  dataskipper_db:
    image: timescale/timescaledb-ha:pg16
    env_file:
      - .env
    platform: linux/amd64
    environment:
      POSTGRES_HOST: $DB_HOST
      POSTGRES_DB: dataskipper_db
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASSWORD
    container_name: dataskipper_db
    ports:
      - "5439:5432"
    volumes:
      - db_vol:/var/lib/postgresql/data

#  rabbitmq:
#    image: rabbitmq:3-management
#    environment:
#      RABBITMQ_DEFAULT_USER: $RABBITMQ_USER
#      RABBITMQ_DEFAULT_PASS: $RABBITMQ_PASSWORD
#    container_name: rabbitmq
#    ports:
#      - "5672:5672" # AMQP protocol
#      - "15672:15672" # Management UI
#    volumes:
#      - data:/var/lib/rabbitmq/mnesia
#
#  subscriber:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    env_file: .env
#    container_name: subscriber
#    depends_on:
#      - rabbitmq
#      - dataskipper
#    command: /bin/bash -c '/wait-for-it.sh dataskipper:8000 -- python manage.py shell < datalogger/subscriber.py'

volumes:
  db_vol:
  data: