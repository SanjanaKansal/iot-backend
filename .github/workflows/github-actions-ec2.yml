name: Deploy Django Application

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup SSH for EC2 Access
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Deploy to EC2            
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.USER }}@${{ secrets.HOST }} << 'EOF'
            DEPLOY_DIR=/home/ubuntu/iot-backend
          
            export DB_USER=${{ secrets.DB_USER }}
            export DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            export DB_HOST=${{ secrets.DB_HOST }}
            export DB_PORT=${{ secrets.DB_PORT }}
            export DJANGO_DEBUG=${{ secrets.DJANGO_DEBUG }}
            export SECRET_KEY=${{ secrets.SECRET_KEY }}
            export RABBITMQ_HOST=${{ secrets.RABBITMQ_HOST }}
            export RABBITMQ_PORT=${{ secrets.RABBITMQ_PORT }}
            export EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }}
            export EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }}
            export SITE_URL=${{ secrets.SITE_URL }}

            # Ensure .ssh directory exists
            mkdir -p ~/.ssh
            chmod 700 ~/.ssh

            # Setup GitHub deploy key for cloning
            echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/deploy_key
            chmod 600 ~/.ssh/deploy_key
            eval $(ssh-agent)
            ssh-add ~/.ssh/deploy_key
            ssh-keyscan github.com >> ~/.ssh/known_hosts

            # Remove the existing directory (if it exists) and clone the repository afresh
            rm -rf $DEPLOY_DIR
            git clone git@github.com:SanjanaKansal/iot-backend.git $DEPLOY_DIR
          
            echo "DB_USER=${{ secrets.DB_USER }}" > $DEPLOY_DIR/.env
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $DEPLOY_DIR/.env
            echo "DB_HOST=${{ secrets.DB_HOST }}" >> $DEPLOY_DIR/.env
            echo "DB_PORT=${{ secrets.DB_PORT }}" >> $DEPLOY_DIR/.env
            echo "DJANGO_DEBUG=${{ secrets.DJANGO_DEBUG }}" >> $DEPLOY_DIR/.env
            echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $DEPLOY_DIR/.env
            echo "RABBITMQ_HOST=${{ secrets.RABBITMQ_HOST }}" >> $DEPLOY_DIR/.env
            echo "RABBITMQ_PORT=${{ secrets.RABBITMQ_PORT }}" >> $DEPLOY_DIR/.env
            echo "EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }}" >> $DEPLOY_DIR/.env
            echo "EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }}" >> $DEPLOY_DIR/.env
            echo "SITE_URL=${{ secrets.SITE_URL }}" >> $DEPLOY_DIR/.env

            cd $DEPLOY_DIR
          
            sudo apt update -y
            sudo apt install python3.10 python3-pip python3.10-venv
            # Setup Python environment and install dependencies
            python3 -m venv venv
            source venv/bin/activate
            pip install -r requirements.txt

            # Apply Django migrations and collect static files
            python3 manage.py migrate
            python manage.py collectstatic

            # Restart Gunicorn
            echo "Restarting Gunicorn..."
            sudo systemctl restart gunicorn.service
          
          EOF
